<?php

namespace calificacionBundle\Repository;

/**
 * calificacionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class calificacionRepository extends \Doctrine\ORM\EntityRepository
{

  public function getFoto($identificacion)
  {
     $em = $this->getEntityManager();
     $db = $em->getConnection();
     $query = "
				SELECT
        RTRIM(LTRIM(RF.SERVIDOR||RF.RUTA_FOTO||FE.NOMBRE_FOTO)) foto

        from   empleados e,
                fotos_empleados fe,
               rutas_fotos rf,
               GRADOS
        where e.activo = 'SI'
              and grados.alfabetico = e.grad_alfabetico
              AND E.UNDE_FUERZA = EMPL_UNDE_FUERZA
              AND E.UNDE_CONSECUTIVO = EMPL_UNDE_CONSECUTIVO
              AND E.CONSECUTIVO = EMPL_CONSECUTIVO
              AND FE.ID_RUTA_FOTO = RF.ID_RUTA_FOTO
              AND FE.EMPL_UNDE_FUERZA = GRADOS.FUERZA
              AND FE.GRAD_ALFABETICO = GRADOS.ALFABETICO
              AND E.IDENTIFICACION = ".$identificacion."
             ";
            $smtp = $db->prepare($query);
             $smtp->execute();
            return  $smtp->fetch();
  }

	public function getListado($anio,$categoria,$turno)
	{
		if($categoria == 'OFIC'){
			$categoria = 10;
      if ($turno == 1) {
        $f_inicio = 1;
        $f_limite = 6;
      }elseif ($turno == 2) {
        $f_inicio = 6;
        $f_limite = 12;
      }
		}elseif ($categoria == 'SUBOFIC') {
			$categoria = 11;
       if ($turno == 1) {
        $f_inicio = 1;
        $f_limite = 3;
      }elseif ($turno == 2) {
        $f_inicio = 9;
        $f_limite = 12;
      }
		}

		$em =   $this->getEntityManager();
		$db =   $em->getConnection();
		$query = "
	SELECT ee.identificacion,
       ee.categoria,
       EE.DESC_GRADO grado_completo,
       ee.abrev_grado grado,
       ee.apellidos ,
       ee.nombres,
       ee.descr_especialidad especialidad,
       ee.guarnicion,
       ee.unidad_dependencia unidad,
       s.sigla,
       ee.fecha_prox_ascenso,
       ee.arma_cuerpo,
       ee.fecha_ult_ascenso uascenso,
       ee.fecha_nacimiento f_nacimiento,
       ee.fecha_disp_alta f_alta,
       ee.cursos_militares,
       ac.descripcion arma_cuerpo,
       proc_gral.tiempoServicio(ee.unde_consecutivo ,ee.fuerza_empleado,ee.id_empleado)t_servicio,
       NUEVO_REHU.CF_TOT_TIEMGRADO(ee.unde_consecutivo,ee.fuerza_empleado,ee.id_empleado, sysdate) t_grado,
      NUEVO_REHU.edad_anio(ee.fecha_nacimiento)edad,
      RTRIM(LTRIM(RF.SERVIDOR||RF.RUTA_FOTO||FE.NOMBRE_FOTO)) RUTA

  FROM  escalafones_empleados ee,
        unidades_dependencia ud,
        siglas s ,
        armas_cuerpos ac,
        fotos_empleados fe,
        rutas_fotos rf

  WHERE ee.fuerza_empleado = 4
    AND   ee.unde_consecutivo_laborando = ud.consecutivo
    AND   ee.unde_fuerza_laborando = ud.fuerza
    AND   ud.id_sigla = s.id_sigla(+)
    AND   ee.id_categoria IN (".$categoria.")

    AND   (ee.abrev_grado <> 'CN' AND ee.abrev_grado <> 'CA' AND
          ee.abrev_grado <> 'CR' AND ee.abrev_grado <> 'AL'
         AND ee.abrev_grado <> 'VA' AND ee.abrev_grado <> 'VA'
         AND ee.abrev_grado <> 'BG' AND ee.abrev_grado <> 'MG'
         AND ee.abrev_grado <> 'SJTC' AND ee.abrev_grado <> 'SMC'
         AND ee.abrev_grado <> 'ST' AND ee.abrev_grado <> 'JT'
         AND ee.abrev_grado <> 'SM')
    AND TO_CHAR(ee.Fecha_Prox_Ascenso,'YYYY') = 2017
    AND TO_CHAR (ee.Fecha_Prox_Ascenso,'MM') BETWEEN ".$f_inicio." AND ".$f_limite."

    AND   ee.id_empleado = fe.empl_consecutivo
    AND   ee.fuerza_empleado = fe.empl_unde_fuerza
    AND   ee.unde_consecutivo = fe.empl_unde_consecutivo

    AND FE.ID_RUTA_FOTO = RF.ID_RUTA_FOTO


    AND     ee.id_arma_cuerpo = ac.id_arma_cuerpo
    AND     ee.fuerza_empleado = ac.fuerza
   ORDER BY ee.id_categoria ASC,
            ee.grado_numerico,
            ee.fecha_ult_ascenso,
            ee.ubicacion_escalafon,
            ee.apellidos,
            ee.nombres
   ";
   	$smtp = $db->prepare($query);
   	$smtp->execute();
   	return	$smtp->fetchAll();
	}


  public function buscaPersona($identificacion='',$apellidos='',$nombres='',$categoria=''){
    $em = $this->getEntityManager();
    $db = $em->getConnection();
    if($categoria == 'OFIC'){
      $categoria = 10;
    }
    elseif ($categoria == 'SUBOFIC') {
      $categoria = 11;
    }
    $datos = array();
    $parametros = array(
                          'identificacion'  => $identificacion,
                          'apellidos'       =>$apellidos ,
                          'nombres'         =>$nombres,
                          'id_categoria'       =>$categoria
                        );
      //parametros de busqueda
    $queryParametros = '';
    foreach ($parametros as $k => $p) {
      if ($p!='') {
        array_push($datos,array($k=>$p)) ;
      }
     }

    if (count($datos)>=1 ) {
      foreach ($datos as $key=>  $value) {
          foreach ($value as $clave => $v) {
            if ($key+1 == count($datos)) {
              $queryParametros .= " ee.".$clave." LIKE '".$v."'";
            }else{
              $queryParametros .= " ee.".$clave." LIKE '".$v."' AND   ";
            }

          }
      }
    }else{
        $queryParametros = "ee.identificacion =  '".$identificacion."'
      OR ee.apellidos LIKE '".$apellidos."'
      OR ee.nombres   LIKE '".$nombres."'
      OR ee.id_categoria = '".$categoria."'  ";
    }

    $query="
  SELECT
    ee.identificacion,
    ee.categoria,
    EE.DESC_GRADO grado_completo,
    ee.abrev_grado grado,
    ee.apellidos,
    ee.nombres,
    ee.descr_especialidad especialidad,
    ee.guarnicion,
    ee.unidad_dependencia unidad,
    s.sigla,
    ee.fecha_prox_ascenso,
    NUEVO_REHU.CF_TOT_TIEMGRADO(ee.unde_consecutivo,ee.fuerza_empleado,ee.id_empleado, sysdate) t_grado
  FROM
    escalafones_empleados ee,
    unidades_dependencia ud,
    siglas s
  WHERE
    ee.fuerza_empleado = 4
  AND ( ".$queryParametros.")
 AND   ee.unde_consecutivo_laborando = ud.consecutivo
 AND   ee.unde_fuerza_laborando = ud.fuerza

 AND   ud.id_sigla = s.id_sigla(+)


   AND ee.id_categoria IN (10, 11)

   AND TO_CHAR(ee.Fecha_Prox_Ascenso,'YYYY') ='2017'

   ORDER BY ee.id_categoria ASC,
            ee.grado_numerico,
            ee.fecha_ult_ascenso,
            ee.ubicacion_escalafon,
            ee.apellidos,
            ee.nombres

";


    $smtp = $db->prepare($query);
    $smtp->execute();
    return  $smtp->fetchAll();

  }


	public function getPersona($identificacion){
		$em = $this->getEntityManager();
		$db = $em->getConnection();
		$query="
    SELECT
       ee.identificacion,
       ee.categoria,
       EE.DESC_GRADO grado_completo,
       ee.abrev_grado grado,
       ee.apellidos ,
       ee.nombres,
       ee.descr_especialidad especialidad,
       ee.guarnicion,
       ee.unidad_dependencia unidad,
       s.sigla,
       ee.fecha_prox_ascenso,
       ee.arma_cuerpo,
       ee.fecha_ult_ascenso uascenso,
       ee.fecha_nacimiento f_nacimiento,
       ee.fecha_disp_alta f_alta,
       ee.cursos_militares,
       ac.descripcion arma_cuerpo,
       proc_gral.tiempoServicio(ee.unde_consecutivo ,ee.fuerza_empleado,ee.id_empleado)t_servicio,
       NUEVO_REHU.CF_TOT_TIEMGRADO(ee.unde_consecutivo,ee.fuerza_empleado,ee.id_empleado, sysdate) t_grado,
       NUEVO_REHU.edad_anio(ee.fecha_nacimiento)edad,
       rg.edad_limite edad_limite,
      RTRIM(LTRIM(RF.SERVIDOR||RF.RUTA_FOTO||FE.NOMBRE_FOTO)) RUTA

      FROM  escalafones_empleados ee,
            unidades_dependencia ud,
            siglas s ,
            armas_cuerpos ac,
            fotos_empleados fe,
            rutas_fotos rf,
            requisitos_grado rg

        WHERE ee.fuerza_empleado = 4
          AND   ee.unde_consecutivo_laborando = ud.consecutivo(+)
          AND   ee.unde_fuerza_laborando = ud.fuerza(+)
          AND   ud.id_sigla = s.id_sigla(+)
          AND   ee.id_categoria IN (10,11)
          AND   ee.identificacion = 9531508

          AND   ( ee.abrev_grado <> 'CA' AND
                ee.abrev_grado <> 'CR' AND ee.abrev_grado <> 'AL'
               AND ee.abrev_grado <> 'VA' AND ee.abrev_grado <> 'VA'
               AND ee.abrev_grado <> 'BG' AND ee.abrev_grado <> 'MG'
               AND ee.abrev_grado <> 'SJTC' AND ee.abrev_grado <> 'SMC'
               AND ee.abrev_grado <> 'ST' AND ee.abrev_grado <> 'JT'
               AND ee.abrev_grado <> 'SM')
          AND TO_CHAR(ee.Fecha_Prox_Ascenso,'YYYY') = 2017

          AND   ee.id_empleado = fe.empl_consecutivo(+)
          AND   ee.fuerza_empleado = fe.empl_unde_fuerza(+)
          AND   ee.unde_consecutivo = fe.empl_unde_consecutivo(+)

          AND   FE.ID_RUTA_FOTO = RF.ID_RUTA_FOTO(+)


          AND     ee.id_arma_cuerpo = ac.id_arma_cuerpo(+)
          AND     ee.fuerza_empleado = ac.fuerza(+)

          AND ee.fuerza_empleado =  rg.fuerza(+)
          AND ee.id_arma_cuerpo =   rg.id_arma_cuerpo(+)
          AND ee.abrev_grado   = rg.grad_alfabetico(+)

         ORDER BY ee.id_categoria ASC,
                  ee.grado_numerico,
                  ee.fecha_ult_ascenso,
                  ee.ubicacion_escalafon,
                  ee.apellidos,
                  ee.nombres
    ";

   	$smtp = $db->prepare($query);
   	$smtp->execute();
   	return	$smtp->fetch();

	}

  public function getMando($identificacion){
    $em = $this->getEntityManager();
    $db = $em->getConnection();
    $query="
        SELECT e.identificacion,
           cg.rv_meaning tipo_requisito,
           sum(tar.horas_millas)millas,

           sum(tar.anos) anos,
           sum(tar.meses) meses,
           sum(dias)dias

      FROM empleados e, tiempos_acumulados_requisitos tar,cg_ref_codes cg

     WHERE e.unde_fuerza = 4
       AND e.identificacion = ".$identificacion."
       AND e.consecutivo = tar.empl_consecutivo
       AND e.unde_fuerza = tar.empl_unde_fuerza
       AND e.unde_consecutivo = tar.empl_unde_consecutivo

       AND cg.rv_domain='TIPO REQUISITO'
       AND trim(cg.rv_low_value) = trim(tar.tipo_requisito)

     GROUP BY e.identificacion, cg.rv_meaning
    ";

    $stmp= $db->prepare($query);
    $stmp->execute();
    return $stmp->fetchAll();

  }

  public function getFolio($identificacion){
    $em = $this->getEntityManager();
    $db = $em->getConnection();

    $query = "
       SELECT
             esv.ano_lista,
             esv.lista,
             eve.fecha_inicio,
             eve.fecha_termino,
             eve.fecha_evaluacion,
             eve.fecha_notificacion,
             cle.fecha_clasificacion,
             cle.lapso_inicial,
             cle.lapso_final,
             ud.descripcion_dependencia unidad,
             s.sigla,
             c.descripcion cargo
      FROM
           empleados e,
           evaluaciones_empleados eve,
           escalas_evaluacion esv,
           clasificacion_empleados cle,
           unidades_dependencia ud,
           siglas s,
           cargos c

      WHERE e.unde_fuerza       = 4
        AND   e.activo            = 'SI'

        AND e.identificacion = ".$identificacion."

        AND   e.unde_consecutivo  = eve.empl_unde_consecutivo
        AND   e.consecutivo       = eve.empl_consecutivo
        AND   e.unde_fuerza       = eve.empl_unde_fuerza

        AND   e.consecutivo       = cle.empl_consecutivo
        AND   e.unde_consecutivo  = cle.empl_unde_consecutivo
        AND   e.unde_fuerza       = cle.empl_unde_fuerza

        AND  cle.esev_fuerza      = esv.fuerza
        AND  cle.esev_id_escala   = esv.id_escala

        AND   eve.id_escala       = esv.id_escala
        AND   eve.esev_fuerza     = esv.fuerza

        AND   cle.unde_consecutivo  = ud.consecutivo
        AND   cle.unde_fuerza       = ud.unde_fuerza

        AND   ud.id_sigla           = s.id_sigla(+)

        AND   eve.cargo             = c.cargo
        AND   eve.esev_fuerza       = c.fuerza


        ORDER BY esv.ano_lista
    ";

    $smtp = $db->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();


  }
  public function countFelicitaciones($identificacion){
    $em = $this->getEntityManager();
    $db = $em->getConnection();

    $query = "
        SELECT count(fe.observaciones) num
        FROM
          empleados e, felicitaciones_empleados fe

        WHERE
          e.unde_fuerza = 4
        AND      e.activo = 'SI'
        AND      e.identificacion = ".$identificacion."
        AND      e.consecutivo     =   fe.empl_consecutivo
        AND      e.unde_fuerza     =   fe.empl_unde_fuerza
        AND      e.unde_consecutivo =  fe.empl_unde_consecutivo
    ";
    $smtp = $db->prepare($query);
    $smtp->execute();
    return $smtp->fetch();
  }
  public function countMedallas($identificacion){
    $em = $this->getEntityManager();
    $db = $em->getConnection();

    $query = "
      SELECT count(cde.id_conde_dist_empl)num
      FROM empleados e, condecora_distintivos_empl cde

      WHERE e.unde_fuerza = 4
        AND   e.activo = 'SI'
        AND   e.identificacion =".$identificacion."
        AND   e.consecutivo = cde.empl_consecutivo
        AND   e.unde_fuerza = cde.empl_unde_fuerza
        AND   e.unde_consecutivo = cde.empl_unde_consecutivo
    ";
    $smtp = $db->prepare($query);
    $smtp->execute();
    return $smtp->fetch();
  }
  public function countAusencias($identificacion){
    $em = $this->getEntityManager();
    $db = $em->getConnection();

    $query = "
      SELECT sum(ale.numero_dias)num
    FROM empleados e, ausencias_laborales_empl ale

   WHERE e.unde_fuerza = 4

     AND e.activo = 'SI'

     AND e.identificacion = ".$identificacion."
     AND e.consecutivo = ale.empl_consecutivo
     AND e.unde_fuerza = ale.empl_unde_fuerza
     AND e.unde_consecutivo = ale.empl_unde_consecutivo

    ";
    $smtp = $db->prepare($query);
    $smtp->execute();
    return $smtp->fetch();
  }
  public function getHistorialAscensos($id){
    $em = $this->getEntityManager();
    $conn = $em->getConnection();
    $query= "
    SELECT d.descripcion,
       ae.numero_disposicion,
       ae.fecha_disposicion,
       ae.id_fechfisc_ascenso,
       cg_ref.rv_meaning,
			 ae.grad_alfabetico grado,
       ae.ubicacion_escalafon
    FROM escalafones_empleados ee, ascensos_empleados ae, disposiciones d, cg_ref_codes cg_ref

   WHERE ee.fuerza_empleado = 4

     AND ee.id_empleado = ae.empl_consecutivo
     AND ee.fuerza_empleado = ae.empl_unde_fuerza
     AND ee.unde_consecutivo = ae.empl_unde_consecutivo


     AND ae.disp_id_disposicion = d.id_disposicion
     AND cg_ref.rv_domain = 'TIPO ASCENSO'
     AND cg_ref.rv_low_value = ae.tipo_ascenso
     AND ee.identificacion = ".$id."


    ";
    $smtp = $conn->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();


  }
  public function getFelicitaciones($id){

    $em = $this->getEntityManager();
    $conn = $em->getConnection();

    $query="
      SELECT
             d.descripcion dispocision,
             fe.numero_disposicion,
             fe.fecha_disposicion,
             cn.descripcion,
             fe.observaciones,
             mf.descripcion motivo_felicitacion,
             fe.grad_alfabetico,
             c.descripcion cargo,
             i.descripcion indicador,
             i2.descripcion subindicador


        FROM empleados                e,
             felicitaciones_empleados fe,
             clases_novedades         cn,
             motivos_felicitacion     mf,
             disposiciones            d,
             indicadores              i,
             indicadores              i2,
             cargos                   c


       WHERE e.unde_fuerza = 4
         AND e.activo = 'SI'
         AND e.identificacion = ".$id."
         AND e.unde_fuerza = fe.empl_unde_fuerza
         AND e.unde_consecutivo = fe.empl_unde_consecutivo
         AND e.consecutivo = fe.empl_consecutivo

         AND fe.disp_id_disposicion = d.id_disposicion

         AND fe.carg_cargo =  c.cargo
         AND fe.unde_fuerza = c.fuerza

         AND fe.id_clase_novedad = cn.id_clase_novedad

         AND fe.unde_fuerza = mf.indi_fuerza(+)

         AND fe.id_motivo_felicitac = mf.id_motivo_felicitac

         AND mf.indi_id_indicador = i.id_indicador(+)
         AND mf.indi_fuerza = i.fuerza(+)

         AND i.indi_id_indicador = i2.id_indicador(+)
         AND i.indi_fuerza = i2.fuerza(+)";

          $smtp = $conn->prepare($query);
          $smtp->execute();
          return $smtp->fetchAll();
  }
  public function getcondecoraciones($id){

   $em = $this->getEntityManager();
      $conn = $em->getConnection();

      $query="
        SELECT
               cn.descripcion,
               ce.descripcion estimulo,
               d.descripcion disposicion,
               cde.numero_disposicion,
               cde.fecha_disposicion,
               cde.postumo,
               cg_r.rv_meaning clase_estimulo
          from empleados                  e,
               condecora_distintivos_empl cde,
               clases_novedades           cn,
               disposiciones              d,
               clases_estimulos           ce,
               cg_ref_codes               cg_r

         WHERE e.unde_fuerza = 4
           AND e.activo = 'SI'
           AND e.identificacion = ".$id."
           AND e.consecutivo = cde.empl_consecutivo
           AND e.unde_fuerza = cde.empl_unde_fuerza
           AND e.unde_consecutivo = cde.empl_unde_consecutivo
           AND cde.id_clase_novedad = cn.id_clase_novedad
           AND cde.disp_id_disposicion = d.id_disposicion
           AND cde.cles_id_clase_estimulo = ce.id_clase_estimulo
           AND cde.empl_unde_fuerza = ce.fuerza
           AND cg_r.rv_low_value = ce.clase_estimulo
           AND cg_r.rv_domain = 'CLASE ESTIMULO'

    ";
      $smtp = $conn->prepare($query);
      $smtp->execute();
      return $smtp->fetchAll();
  }
  public function getMerito($id){

   $em = $this->getEntityManager();
      $conn = $em->getConnection();

      $query="
        SELECT cn.descripcion complemento, ce.contenido, ce.id_fecha_complem, ce.grad_alfabetico

          FROM empleados e,
               complementos_empleados ce,
               clases_novedades cn

          WHERE e.unde_fuerza = 4
          AND   e.consecutivo = ce.empl_consecutivo
          AND   e.unde_fuerza = ce.empl_unde_fuerza
          AND   e.unde_consecutivo = ce.empl_unde_consecutivo

          AND ce.id_clase_novedad in (8446)

          AND   ce.id_clase_novedad =  cn.id_clase_novedad
          and  e.identificacion = ".$id."

    ";
      $smtp = $conn->prepare($query);
      $smtp->execute();
      return $smtp->fetchAll();
  }
  public function getConceptoPositivo($id){

     $em = $this->getEntityManager();
        $conn = $em->getConnection();

        $query="
          SELECT cn.descripcion complemento, ce.contenido, ce.id_fecha_complem, ce.grad_alfabetico

            FROM empleados e,
                 complementos_empleados ce,
                 clases_novedades cn

            WHERE e.unde_fuerza = 4
            AND   e.consecutivo = ce.empl_consecutivo
            AND   e.unde_fuerza = ce.empl_unde_fuerza
            AND   e.unde_consecutivo = ce.empl_unde_consecutivo

            AND ce.id_clase_novedad in (1555,8628)

            AND   ce.id_clase_novedad =  cn.id_clase_novedad
            and  e.identificacion = ".$id."

      ";
        $smtp = $conn->prepare($query);
        $smtp->execute();
        return $smtp->fetchAll();
  }
  public function getConceptoNegativo($id){

     $em = $this->getEntityManager();
        $conn = $em->getConnection();

        $query="
          SELECT cn.descripcion complemento, ce.contenido, ce.id_fecha_complem, ce.grad_alfabetico

            FROM empleados e,
                 complementos_empleados ce,
                 clases_novedades cn

            WHERE e.unde_fuerza = 4
            AND   e.consecutivo = ce.empl_consecutivo
            AND   e.unde_fuerza = ce.empl_unde_fuerza
            AND   e.unde_consecutivo = ce.empl_unde_consecutivo

            AND ce.id_clase_novedad in (8627)

            AND   ce.id_clase_novedad =  cn.id_clase_novedad
            and  e.identificacion = ".$id."

      ";
        $smtp = $conn->prepare($query);
        $smtp->execute();
        return $smtp->fetchAll();
  }
  public function getDemerito($id){

     $em = $this->getEntityManager();
        $conn = $em->getConnection();

        $query="
          SELECT cn.descripcion complemento, ce.contenido, ce.id_fecha_complem, ce.grad_alfabetico

            FROM empleados e,
                 complementos_empleados ce,
                 clases_novedades cn

            WHERE e.unde_fuerza = 4
            AND   e.consecutivo = ce.empl_consecutivo
            AND   e.unde_fuerza = ce.empl_unde_fuerza
            AND   e.unde_consecutivo = ce.empl_unde_consecutivo

            AND ce.id_clase_novedad in (8448)

            AND   ce.id_clase_novedad =  cn.id_clase_novedad
            and  e.identificacion = ".$id."

      ";
        $smtp = $conn->prepare($query);
        $smtp->execute();
        return $smtp->fetchAll();
  }
  public function countListas($id){

        $em = $this->getEntityManager();
        $conn = $em->getConnection();

        $query="
                    SELECT
                 esv.lista , count(esv.lista)n_lista

          FROM
               empleados e,
               evaluaciones_empleados eve,
               escalas_evaluacion esv,
               clasificacion_empleados cle,
               unidades_dependencia ud,
               siglas s,
               cargos c

          WHERE
                  e.unde_fuerza       = 4
            AND   e.activo            = 'SI'

            AND   e.identificacion = ".$id."

            AND   e.unde_consecutivo  = eve.empl_unde_consecutivo
            AND   e.consecutivo       = eve.empl_consecutivo
            AND   e.unde_fuerza       = eve.empl_unde_fuerza

            AND   e.consecutivo       = cle.empl_consecutivo
            AND   e.unde_consecutivo  = cle.empl_unde_consecutivo
            AND   e.unde_fuerza       = cle.empl_unde_fuerza

            AND  cle.esev_fuerza      = esv.fuerza
            AND  cle.esev_id_escala   = esv.id_escala

            AND   eve.id_escala       = esv.id_escala
            AND   eve.esev_fuerza     = esv.fuerza

            AND   cle.unde_consecutivo  = ud.consecutivo
            AND   cle.unde_fuerza       = ud.unde_fuerza

            AND   ud.id_sigla           = s.id_sigla

            AND   eve.cargo             = c.cargo
            AND   eve.esev_fuerza       = c.fuerza


            GROUP BY esv.lista
      ";
        $smtp = $conn->prepare($query);
        $smtp->execute();
        return $smtp->fetchAll();
  }

  public function getLicenciasNoRemuneradas($id){
    $em = $this->getEntityManager();
    $conn = $em->getConnection();

    $query="
      SELECT
      TO_CHAR(ale.fecha_disposicion, 'YYYY') año_disposicion,
       cat.descripcion Categoria,
       g.alfabetico GRD,
       e.apellidos,
       e.nombres,
       e.identificacion,
       ud.descripcion_dependencia Dependencia,
       cn.descripcion Tipo_licencia,
       ale.fecha_disposicion Fecha_Disposicion,
       ale.id_fechfisc_aus_laboral Fecha_Fiscal_Inicio,
       ale.fecha_final
      FROM empleados                e,
           grados                   g,
           categorias               cat,
           unidades_dependencia     ud,
           ausencias_laborales_empl ale,
           --nomina_devengados nd
           clases_novedades cn

       WHERE e.unde_fuerza = 4
            AND e.identificacion = ".$id."
         AND e.activo = 'SI'
         AND e.unde_fuerza = g.fuerza

         AND e.grad_alfabetico = g.alfabetico

         AND e.unde_fuerza = cat.fuerza
         AND g.id_categoria = cat.id_categoria
         AND cat.id_categoria IN (10, 11)

         AND e.unde_fuerza = ud.fuerza
         AND e.unde_consecutivo = ud.consecutivo

         AND e.unde_fuerza = ALE.EMPL_UNDE_FUERZA
         AND e.unde_consecutivo = ale.empl_unde_consecutivo
         AND e.consecutivo = ale.empl_consecutivo

         AND ALE.ID_CLASE_NOVEDAD = CN.ID_CLASE_NOVEDAD

         AND cn.id_clase_novedad IN (1483, 1489, 1480)



       ORDER BY año_disposicion,
                cat.id_categoria,
                g.alfabetico,
                e.fecha_ult_ascenso,
                e.apellidos,
                e.nombres
      ";
        $smtp = $conn->prepare($query);
        $smtp->execute();
        return $smtp->fetchAll();
  }
  public function getNivelesAcademicos($id){
    $em= $this->getEntityManager();
    $conn = $em->getConnection();
    $query=
    "select
       na.descripcion nivel,
       ca.descripcion,
       eeduc.nombre || empr.nombre_o_razon_social ||
       ud.descripcion_dependencia unidad,
       nae.fecha_inicio,
       nae.fecha_termino,
       nae.nivel_acad_actual
  from empleados                   e,
       niveles_academicos_empleado nae,
       carreras                    ca,
       niveles_academicos          na,
       establecimientos_educa      eeduc,
       empresas                    empr,
       unidades_dependencia        ud

 WHERE e.unde_fuerza = 4
   AND e.identificacion = ".$id."
   AND e.consecutivo = nae.empl_consecutivo
   AND e.unde_fuerza = nae.empl_unde_fuerza
   AND e.unde_consecutivo = nae.empl_unde_consecutivo
   AND nae.carr_id_carrera = ca.id_carrera(+)
   AND nae.empl_unde_fuerza = ca.fuerza(+)
   AND ca.id_nivel_academico = na.id_nivel_academico(+)
   AND nae.id_establecimiento_educa = eeduc.id_establecimiento_educa(+)
   AND nae.empr_identificacion = empr.identificacion(+)
   AND nae.empr_tipo_identificacion = empr.tipo_identificacion(+)
   AND nae.empr_unde_consecutivo = empr.unde_consecutivo(+)
   AND nae.empr_unde_fuerza = empr.unde_fuerza(+)
   AND nae.unde_fuerza = ud.fuerza(+)
   AND nae.unde_consecutivo = ud.consecutivo(+)

 ORDER BY nae.fecha_inicio DESC
";
    $smtp = $conn->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();

  }

  public function countNiveles($id){
    $em= $this->getEntityManager();
    $conn = $em->getConnection();
    $query="select

       na.descripcion, COUNT(*) AS conteo

  from empleados                   e,
       niveles_academicos_empleado nae,
       carreras                    ca,
       niveles_academicos          na
     /*  establecimientos_educa      eeduc,
       empresas                    empr,
       unidades_dependencia        ud*/

 WHERE e.unde_fuerza = 4
   AND e.identificacion = ".$id."
   AND e.consecutivo = nae.empl_consecutivo
   AND e.unde_fuerza = nae.empl_unde_fuerza
   AND e.unde_consecutivo = nae.empl_unde_consecutivo
   AND nae.carr_id_carrera = ca.id_carrera(+)
   AND nae.empl_unde_fuerza = ca.fuerza(+)
   AND ca.id_nivel_academico = na.id_nivel_academico(+)
  /* AND nae.id_establecimiento_educa = eeduc.id_establecimiento_educa(+)
   AND nae.empr_identificacion = empr.identificacion(+)
   AND nae.empr_tipo_identificacion = empr.tipo_identificacion(+)
   AND nae.empr_unde_consecutivo = empr.unde_consecutivo(+)
   AND nae.empr_unde_fuerza = empr.unde_fuerza(+)
   AND nae.unde_fuerza = ud.fuerza(+)
   AND nae.unde_consecutivo = ud.consecutivo(+)*/


      GROUP BY na.descripcion";
    $smtp = $conn->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();
  }

  public function getExperiencia($id){

    $em= $this->getEntityManager();
    $conn = $em->getConnection();
    $query="SELECT vin.rv_meaning,
       empr.nombre_o_razon_social,
       ele.fecha_inicial,
       ele.fecha_retiro
  FROM empleados                   e,
       experiencias_laborales_empl ele,
       empresas                    empr,
       cg_ref_codes                vin

 WHERE e.unde_fuerza = 4
   AND e.identificacion =".$id."
   AND e.consecutivo = ele.empl_consecutivo
   AND e.unde_fuerza = ele.empl_unde_fuerza
   AND e.unde_consecutivo = ele.empl_unde_consecutivo
   AND vin.rv_domain = 'TIPO VINCULACION'
   AND ele.tipo_vinculacion = vin.rv_low_value
   AND ele.empr_identificacion = empr.identificacion
   AND ele.empr_unde_fuerza = empr.unde_fuerza
   AND ele.empr_unde_consecutivo = empr.unde_consecutivo
   AND ele.empr_tipo_identificacion = empr.tipo_identificacion";

    $smtp = $conn->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();

  }
  public function getIdiomas($id){
    $em= $this->getEntityManager();
    $conn = $em->getConnection();
    $query = "SELECT i.descripcion idioma,
       ie.habla,
       ie.lee,
       ie.escribe,
       ie.escucha,
       ie.puntos,
       ie.fecha_examen,
       ee.nombre || ud.descripcion_dependencia || empr.nombre_o_razon_social AS ENTIDAD

  FROM empleados              e,
       idiomas_empleados      ie,
       idiomas                i,
       establecimientos_educa ee,
       empresas               empr,
       unidades_dependencia   ud
 where ie.empl_unde_fuerza = 4
   AND e.identificacion = ".$id."
   AND e.consecutivo = ie.empl_consecutivo
   AND e.unde_consecutivo = ie.empl_unde_consecutivo
   AND e.unde_fuerza = ie.empl_unde_fuerza
   AND ie.id_idioma = i.id_idioma
   AND ie.creado_por <> 'PRUEBA'
   AND ie.id_establecimiento_educa = ee.id_establecimiento_educa(+)
   AND ie.empr_tipo_identificacion = empr.tipo_identificacion(+)
   AND ie.empr_unde_fuerza = empr.unde_fuerza(+)
   AND ie.empr_unde_consecutivo = empr.unde_consecutivo(+)
   AND ie.empr_identificacion = empr.identificacion(+)
   AND ie.unde_fuerza = ud.fuerza(+)
   AND ie.unde_consecutivo = ud.consecutivo(+)";
    $smtp = $conn->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();
  }

}
