<?php

namespace calificacionBundle\Repository;

/**
 * calificacionRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class calificacionRepository extends \Doctrine\ORM\EntityRepository
{

//listado de ascensos  
	public function getListado($anio,$categoria,$turno)
	{
		if($categoria == 'oficiales'){
			$categoria = 10;
      if ($turno == 1) {
        $mes = 6;
      }elseif ($turno == 2) {
        $mes = 12;
      }
		}elseif ($categoria == 'suboficiales') {
			$categoria = 11;
       if ($turno == 1) {
        $mes = 3;
      }elseif ($turno == 2) {
        $mes = 9;
      }
		}

		$em =   $this->getEntityManager();
		$db =   $em->getConnection();
		$query = "
	SELECT 
       empleados.identificacion,
       categorias.descripcion categoria,
       empleados.grad_alfabetico grado,
       empleados.nombres,
       empleados.apellidos,
       cargos.descripcion cargo_actual,
       UD.DESCRIPCION_DEPENDENCIA         Unidad,
       S.SIGLA                            Sigla,
       esp.descripcion especialidad,
       guarniciones_complejos.descripcion guarnicion
  from empleados,
       grados,
       categorias,
       cargos,
       UNIDADES_DEPENDENCIA UD,
       SIGLAS S,
       especialidades esp,
        guarniciones_complejos 
           
     
       
where EMPLEADOS.unde_fuerza = 4
   and EMPLEADOS.activo = 'SI'
     
   and grados.id_categoria IN (".$categoria.")
      
   AND (SUBSTR(NUEVO_REHU.CF_TOT_TIEMGRADO(EMPLEADOS.UNDE_CONSECUTIVO,
                                          EMPLEADOS.UNDE_FUERZA,
                                          EMPLEADOS.CONSECUTIVO,
                                          '30/".$mes."/".$anio."'),1,1) >= GRADOS.TIEMPO_GRADO

OR nuevo_rehu.proc_gral.ret_prox_ascenso(EMPLEADOS.CONSECUTIVO,
                                                   EMPLEADOS.UNDE_CONSECUTIVO,
                                                   EMPLEADOS.UNDE_FUERZA) between '01/".$mes."/".$anio."' and '30/".$mes."/".$anio."'

OR nuevo_rehu.proc_gral.ret_prox_ascenso(EMPLEADOS.CONSECUTIVO,
                                                   EMPLEADOS.UNDE_CONSECUTIVO,
                                                   EMPLEADOS.UNDE_FUERZA) IS NULL )


   and GRADOS.numerico IN (4, 5, 6, 7, 8, 9, 22, 24, 26, 28, 30, 32)
    
   and grados.fuerza = empleados.unde_fuerza
   and grados.alfabetico = empleados.grad_alfabetico
   and categorias.id_categoria = grados.id_categoria
   and categorias.fuerza = grados.fuerza
   AND EMPLEADOS.CARG_CARGO = CARGOS.CARGO
   AND EMPLEADOS.CARG_FUERZA = CARGOS.FUERZA
   AND EMPLEADOS.UNDE_FUERZA_LABORANDO = UD.FUERZA
   AND EMPLEADOS.UNDE_CONSECUTIVO_LABORANDO = UD.CONSECUTIVO
   AND UD.ID_SIGLA = S.ID_SIGLA(+)

   AND EMPLEADOS.Espe_Id_Especialidad = esp.id_especialidad(+)
   AND EMPLEADOS.UNDE_FUERZA = esp.fuerza(+)

    AND UD.GUCO_FUERZA = GUARNICIONES_COMPLEJOS.FUERZA(+)
   AND UD.GUCO_CODIGO = GUARNICIONES_COMPLEJOS.CODIGO(+)

       
   AND EMPLEADOS.GRAD_ALFABETICO <> 'TO'
   AND EMPLEADOS.GRAD_ALFABETICO <> 'SJM'
   AND EMPLEADOS.GRAD_ALFABETICO <> 'E2'
   AND EMPLEADOS.IDENTIFICACION <> 1
      

ORDER BY    
          grados.id_categoria,
          GRADOS.Numerico,
          EMPLEADOS.FECHA_ULT_ASCENSO,
          empleados.Ubicacion_Escalafon
   ";
   	$smtp = $db->prepare($query);
   	$smtp->execute();
   	return	$smtp->fetchAll();
	}



//buscador de personas que retorna un listado
  public function buscaPersona($identificacion='',$apellidos='',$nombres='',$categoria=''){
    $em = $this->getEntityManager();
    $db = $em->getConnection();
    if($categoria == 'oficiales'){
      $categoria = 10;
    }
    elseif ($categoria == 'suboficiales') {
      $categoria = 11;
    }
    $datos = array();
    $parametros = array(
                          'identificacion'  => $identificacion,
                          'apellidos'       =>$apellidos ,
                          'nombres'         =>$nombres,
                          'id_categoria'       =>$categoria
                        );
      //parametros de busqueda
    $queryParametros = '';
    foreach ($parametros as $k => $p) {
        if ($p!='') {
          array_push($datos,array($k=>$p)) ;
        }
     }

    if (count($datos)>=1 ) {
      foreach ($datos as $key=>  $value) {
          foreach ($value as $clave => $v) {
            if ($key+1 == count($datos)) {
              
              if ($clave=='id_categoria') {
               $queryParametros .= "grados.".$clave." LIKE '".$v."'";
              }else{
                $queryParametros .= " empleados.".$clave." LIKE '".$v."'";
              }
            }else{
               if ($clave=='id_categoria') {
               $queryParametros .= "grados.".$clave." LIKE '".$v."' AND ";
              }else{
                $queryParametros .= "empleados.".$clave." LIKE '".$v."' AND ";
              }
            }
          }
      }
    }else{
        $queryParametros = "empleados.identificacion =  '".$identificacion."'
      OR empleados.apellidos LIKE '".$apellidos."'
      OR empleados.nombres   LIKE '".$nombres."'
      OR grados.id_categoria = '".$categoria."'  ";
    }

   
$query= "
  SELECT 
       empleados.identificacion,
       categorias.descripcion categoria,
       empleados.grad_alfabetico grado,
       empleados.nombres,
       empleados.apellidos,
       cargos.descripcion cargo_actual,
       UD.DESCRIPCION_DEPENDENCIA         Unidad,
       S.SIGLA                            Sigla,
       esp.descripcion especialidad,
       guarniciones_complejos.descripcion guarnicion,
       ac.descripcion arma_cuerpo 
  from empleados,
       grados,
       categorias,
       cargos,
       UNIDADES_DEPENDENCIA UD,
       SIGLAS S,
       especialidades esp,
        guarniciones_complejos,
        armas_cuerpos ac 

           
where EMPLEADOS.unde_fuerza = 4
   and EMPLEADOS.activo = 'SI'
     
    AND ( ".$queryParametros.")

   AND (SUBSTR(NUEVO_REHU.CF_TOT_TIEMGRADO(EMPLEADOS.UNDE_CONSECUTIVO,
                                          EMPLEADOS.UNDE_FUERZA,
                                          EMPLEADOS.CONSECUTIVO,
                                          '31/12/2017'),1,1) >= GRADOS.TIEMPO_GRADO

OR nuevo_rehu.proc_gral.ret_prox_ascenso(EMPLEADOS.CONSECUTIVO,
                                                   EMPLEADOS.UNDE_CONSECUTIVO,
                                                   EMPLEADOS.UNDE_FUERZA) between '01/01/2017' and '31/12/2017'

OR nuevo_rehu.proc_gral.ret_prox_ascenso(EMPLEADOS.CONSECUTIVO,
                                                   EMPLEADOS.UNDE_CONSECUTIVO,
                                                   EMPLEADOS.UNDE_FUERZA) IS NULL )


   and GRADOS.numerico IN (4, 5, 6, 7, 8, 9, 22, 24, 26, 28, 30, 32)
    
   and grados.fuerza = empleados.unde_fuerza
   and grados.alfabetico = empleados.grad_alfabetico
   and categorias.id_categoria = grados.id_categoria
   and categorias.fuerza = grados.fuerza
   AND EMPLEADOS.CARG_CARGO = CARGOS.CARGO
   AND EMPLEADOS.CARG_FUERZA = CARGOS.FUERZA
   AND EMPLEADOS.UNDE_FUERZA_LABORANDO = UD.FUERZA
   AND EMPLEADOS.UNDE_CONSECUTIVO_LABORANDO = UD.CONSECUTIVO
   AND UD.ID_SIGLA = S.ID_SIGLA(+)

   AND EMPLEADOS.Espe_Id_Especialidad = esp.id_especialidad(+)
   AND EMPLEADOS.UNDE_FUERZA = esp.fuerza(+)

    AND UD.GUCO_FUERZA = GUARNICIONES_COMPLEJOS.FUERZA(+)
   AND UD.GUCO_CODIGO = GUARNICIONES_COMPLEJOS.CODIGO(+)

   AND empleados.arcu_id_arma_cuerpo =  ac.id_arma_cuerpo 
   AND empleados.arcu_fuerza = ac.fuerza

       
   AND EMPLEADOS.GRAD_ALFABETICO <> 'TO'
   AND EMPLEADOS.GRAD_ALFABETICO <> 'SJM'
   AND EMPLEADOS.GRAD_ALFABETICO <> 'E2'
   AND EMPLEADOS.IDENTIFICACION <> 1
      
  
ORDER BY    
          grados.id_categoria,
          GRADOS.Numerico,
          EMPLEADOS.FECHA_ULT_ASCENSO,
          empleados.Ubicacion_Escalafon
";


    $smtp = $db->prepare($query);
    $smtp->execute();
    return  $smtp->fetchAll();

  }

//datos generales x persona
	public function getPersona($identificacion){
		$em = $this->getEntityManager();
		$db = $em->getConnection();
		$query="
   SELECT 
      empleados.identificacion,
      categorias.descripcion categoria,
      empleados.grad_alfabetico grado,
      grados.descripcion grado_completo,
      empleados.nombres,
      empleados.apellidos,
      cargos.descripcion cargo_actual,
      UD.DESCRIPCION_DEPENDENCIA         Unidad,
      S.SIGLA                            Sigla,
      esp.descripcion especialidad,
      guarniciones_complejos.descripcion guarnicion,
      ac.descripcion arma_cuerpo 
  from 
      empleados,
      grados,
      categorias,
      cargos,
      UNIDADES_DEPENDENCIA UD,
      SIGLAS S,
      especialidades esp,
      guarniciones_complejos,
      armas_cuerpos ac  
           
where EMPLEADOS.unde_fuerza = 4
  AND EMPLEADOS.activo = 'SI'
       
  AND (SUBSTR(NUEVO_REHU.CF_TOT_TIEMGRADO(EMPLEADOS.UNDE_CONSECUTIVO,
                                        EMPLEADOS.UNDE_FUERZA,
                                        EMPLEADOS.CONSECUTIVO,
                                        '31/12/2017'),1,1) >= GRADOS.TIEMPO_GRADO

  OR nuevo_rehu.proc_gral.ret_prox_ascenso(EMPLEADOS.CONSECUTIVO,
                                                     EMPLEADOS.UNDE_CONSECUTIVO,
                                                     EMPLEADOS.UNDE_FUERZA) between '01/01/2017' and '31/12/2017'

  OR nuevo_rehu.proc_gral.ret_prox_ascenso(EMPLEADOS.CONSECUTIVO,
                                                     EMPLEADOS.UNDE_CONSECUTIVO,
                                                     EMPLEADOS.UNDE_FUERZA) IS NULL )

   and GRADOS.numerico IN (4, 5, 6, 7, 8, 9, 22, 24, 26, 28, 30, 32)
    
   and grados.fuerza = empleados.unde_fuerza
   and grados.alfabetico = empleados.grad_alfabetico
   and categorias.id_categoria = grados.id_categoria
   and categorias.fuerza = grados.fuerza
   AND EMPLEADOS.CARG_CARGO = CARGOS.CARGO
   AND EMPLEADOS.CARG_FUERZA = CARGOS.FUERZA
   AND EMPLEADOS.UNDE_FUERZA_LABORANDO = UD.FUERZA
   AND EMPLEADOS.UNDE_CONSECUTIVO_LABORANDO = UD.CONSECUTIVO
   AND UD.ID_SIGLA = S.ID_SIGLA(+)

   AND EMPLEADOS.Espe_Id_Especialidad = esp.id_especialidad(+)
   AND EMPLEADOS.UNDE_FUERZA = esp.fuerza(+)

    AND UD.GUCO_FUERZA = GUARNICIONES_COMPLEJOS.FUERZA(+)
   AND UD.GUCO_CODIGO = GUARNICIONES_COMPLEJOS.CODIGO(+)

   AND empleados.arcu_id_arma_cuerpo =  ac.id_arma_cuerpo 
   AND empleados.arcu_fuerza = ac.fuerza

   AND EMPLEADOS.GRAD_ALFABETICO <> 'TO'
   AND EMPLEADOS.GRAD_ALFABETICO <> 'SJM'
   AND EMPLEADOS.GRAD_ALFABETICO <> 'E2'
   AND EMPLEADOS.IDENTIFICACION <> 1
   AND EMPLEADOS.IDENTIFICACION = ".$identificacion."
ORDER BY    
          grados.id_categoria,
          GRADOS.Numerico,
          EMPLEADOS.FECHA_ULT_ASCENSO,
          empleados.Ubicacion_Escalafon
    ";
   	$smtp = $db->prepare($query);
   	$smtp->execute();
   	return	$smtp->fetch();

	}



public function getDatos($id){
   $em = $this->getEntityManager();
    $db = $em->getConnection();
    $query="SELECT sl.descripcion         situacion,
       e.email_institucional,
       e.fecha_alta_propiedad f_ingreso,
       e.fecha_ult_ascenso,
       nuevo_rehu.rh_trae_fecha_ult_ascenso(e.CONSECUTIVO,
                                            e.UNDE_FUERZA,
                                            e.UNDE_CONSECUTIVO) fch_ult_Tascenso,
       (SELECT TE.FECHA_INICIO
      
          FROM empleados,TIEMPOS_EMPLEADOS TE, TIEMPOS T
         WHERE TE.EMPL_UNDE_FUERZA = empleados.UNDE_FUERZA
           AND TE.EMPL_UNDE_CONSECUTIVO = empleados.UNDE_CONSECUTIVO
           AND TE.EMPL_CONSECUTIVO = empleados.CONSECUTIVO
           AND TE.CONDICION_REGISTRO = 'NA'
           AND TE.TIPO = 'IE'
           AND nvl(TE.TIEP_ID_TIEMPO_EMPL, 0) = 0
           AND TE.TIEM_ID_TIEMPO = T.ID_TIEMPO
           AND TE.TIEM_FUERZA = T.FUERZA
           AND TE.TIPO <> 'NR'
           AND TE.PAGO <> 'SI'
           and rownum = 1 ----------tiempos repetidos-----------------
        --AND Empleados.IDENTIFICACION = 79872587
        /*ORDER BY TE.FECHA_INICIO*/
        ) fch_ingr_escuela
  FROM empleados e, situaciones_laborales sl

 WHERE e.unde_fuerza = 4
   AND e.identificacion = ".$id."
   AND e.sila_id_situac_labor = sl.id_situac_laboral";
    $stmp= $db->prepare($query);
    $stmp->execute();
    return $stmp->fetch();

}

public function getCambiosEsp($id){
  $em = $this->getEntityManager();
  $db = $em->getConnection();
  $query="
SELECT 
       cn.descripcion      clase_novedad,
       ac.descripcion      armaCuerpo,
       esp.descripcion     especialidad,
       ee.numero_disposicion,
       ee.fecha_disposicion,
       ee.fecha_fiscal

  FROM EMPLEADOS                e,
       especialidades_empleados ee,
       especialidades           esp,
       armas_cuerpos            ac,
       clases_novedades         cn

 WHERE e.unde_fuerza = 4
      
   AND e.identificacion = ".$id."
      
   AND e.consecutivo = ee.empl_consecutivo
   AND e.unde_fuerza = ee.empl_unde_fuerza
   AND e.unde_consecutivo = ee.empl_unde_consecutivo
      
   AND ee.espe_id_especialidad = esp.id_especialidad
   AND ee.empl_unde_fuerza = esp.fuerza
      
   AND ee.id_clase_novedad = cn.id_clase_novedad
      /*   AND cn.id_clase_novedad = 1616*/
      
   AND e.arcu_fuerza = ac.fuerza
   AND e.arcu_id_arma_cuerpo = ac.id_arma_cuerpo
      ORDER BY ee.fecha_fiscal desc
";
  $stmp= $db->prepare($query);
  $stmp->execute();
  return $stmp->fetchAll();

}

public function getTiemposBasicos($id){
  $em = $this->getEntityManager();
  $db = $em->getConnection();
  $query="SELECT e.identificacion,
       proc_gral.tiempoServicio(e.unde_consecutivo,
                                e.unde_fuerza,
                                e.consecutivo) t_servicio,
       NUEVO_REHU.CF_TOT_TIEMGRADO(e.unde_consecutivo,
                                   e.unde_fuerza,
                                   e.consecutivo,
                                   sysdate) t_grado

  FROM empleados e
 WHERE e.unde_fuerza = 4
   AND e.identificacion = ".$id."";

  $stmp= $db->prepare($query);
  $stmp->execute();
  return $stmp->fetch();

}

//tiempos requisitos de ascenso
  public function getTiempos($identificacion){
    $em = $this->getEntityManager();
    $db = $em->getConnection();
    $query="
        SELECT e.identificacion,
           cg.rv_meaning tipo_requisito,
           sum(tar.horas_millas)millas,

           sum(tar.anos) anos,
           sum(tar.meses) meses,
           sum(dias)dias


      FROM empleados e, tiempos_acumulados_requisitos tar,cg_ref_codes cg

     WHERE e.unde_fuerza = 4
       AND e.identificacion = ".$identificacion."
       AND e.consecutivo = tar.empl_consecutivo
       AND e.unde_fuerza = tar.empl_unde_fuerza
       AND e.unde_consecutivo = tar.empl_unde_consecutivo

       AND cg.rv_domain='TIPO REQUISITO'
       AND trim(cg.rv_low_value) = trim(tar.tipo_requisito)

     GROUP BY e.identificacion, cg.rv_meaning
    ";

    $stmp= $db->prepare($query);
    $stmp->execute();
    return $stmp->fetchAll();

  }


//lapsos y listas
  public function getFolios($id){
    $em = $this->getEntityManager();
    $db = $em->getConnection();

    $query = "
       SELECT 
       esv.ano_lista,
       esv.lista,
       eve.fecha_inicio,
       eve.fecha_termino,
       eve.fecha_evaluacion,
       eve.fecha_notificacion,
       ud_evd.descripcion_dependencia Unidad_evaluado,
       s_evd.sigla  sigla_evaluado,
       c.descripcion cargo,
       e2.activo,
       e2.identificacion id_evaluador,
       e2.apellidos apellidos_evaluador,
       e2.nombres nombres_evaluador,
       ud_eva.descripcion_dependencia Unidad_Actual_evaluador,
       s_eva.sigla sigla_evaluador
 FROM 
     empleados e, 
     empleados e2,
     evaluaciones_empleados eve,
     escalas_evaluacion esv,
     unidades_dependencia ud_evd,
     unidades_dependencia ud_eva,
     siglas s_eva,
     siglas s_evd,
     cargos c
  
WHERE 
 
  e.unde_consecutivo  = eve.empl_unde_consecutivo
  AND   e.consecutivo       = eve.empl_consecutivo
  AND   e.unde_fuerza       = eve.empl_unde_fuerza
  
  
  
 AND  eve.esev_fuerza  = esv.fuerza
 AND  eve.id_escala   = esv.id_escala
  
 -- AND   eve.id_escala       = esv.id_escala
  --AND   eve.esev_fuerza     = esv.fuerza
  
  AND   e2.unde_consecutivo_laborando  = ud_eva.consecutivo
  AND   e2.unde_fuerza_laborando      = ud_eva.fuerza
  
  AND   eve.unde_fuerza       = ud_evd.fuerza
  AND   eve.unde_evaluadora = ud_evd.consecutivo
  
  
  AND   ud_eva.id_sigla           = s_eva.id_sigla(+)
  AND   ud_evd.id_sigla           = s_evd.id_sigla(+)
  
  AND   eve.cargo             = c.cargo
  AND   eve.esev_fuerza       = c.fuerza
  
  AND   e2.consecutivo         = eve.empl_evaluador
  AND   e2.unde_fuerza         = eve.fuerza_evaluador
  AND   e2.unde_consecutivo    = eve.unde_evaluador
  
  AND     e.unde_fuerza       = 4 
  AND   e.activo            = 'SI'
   AND   e.identificacion = ".$id."
  
  ORDER BY esv.ano_lista desc

    ";

    $smtp = $db->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();


  }


  public function countFelicitaciones($identificacion){
    $em = $this->getEntityManager();
    $db = $em->getConnection();

    $query = "
        SELECT count(fe.observaciones) num
        FROM
          empleados e, felicitaciones_empleados fe

        WHERE
          e.unde_fuerza = 4
        AND      e.activo = 'SI'
        AND      e.identificacion = ".$identificacion."
        AND      e.consecutivo     =   fe.empl_consecutivo
        AND      e.unde_fuerza     =   fe.empl_unde_fuerza
        AND      e.unde_consecutivo =  fe.empl_unde_consecutivo
    ";
    $smtp = $db->prepare($query);
    $smtp->execute();
    return $smtp->fetch();
  }
  public function countMedallas($identificacion){
    $em = $this->getEntityManager();
    $db = $em->getConnection();

    $query = "
      SELECT count(cde.id_conde_dist_empl)num
      FROM empleados e, condecora_distintivos_empl cde

      WHERE e.unde_fuerza = 4
        AND   e.activo = 'SI'
        AND   e.identificacion =".$identificacion."
        AND   e.consecutivo = cde.empl_consecutivo
        AND   e.unde_fuerza = cde.empl_unde_fuerza
        AND   e.unde_consecutivo = cde.empl_unde_consecutivo
    ";
    $smtp = $db->prepare($query);
    $smtp->execute();
    return $smtp->fetch();
  }

  public function getEstimulo($id,$estimulo){
    $em = $this->getEntityManager();
    $db = $em->getConnection();

    $query ="
            select 
       cn.descripcion tipo_estimulo,
       ce.descripcion estimulo,
       d.descripcion disposicion,
       cde.numero_disposicion,
       cde.fecha_disposicion,
       cde.postumo,
       cg_r.rv_meaning clase_estimulo
  from empleados                  e,
       condecora_distintivos_empl cde,
       clases_novedades           cn,
       disposiciones              d,
       clases_estimulos           ce,
       cg_ref_codes               cg_r

 WHERE e.unde_fuerza = 4
   AND e.activo = 'SI'
   AND e.identificacion = ".$id."
   AND e.consecutivo = cde.empl_consecutivo
   AND e.unde_fuerza = cde.empl_unde_fuerza
   AND e.unde_consecutivo = cde.empl_unde_consecutivo
   AND cde.id_clase_novedad = cn.id_clase_novedad
   AND cde.disp_id_disposicion = d.id_disposicion
   AND cde.cles_id_clase_estimulo = ce.id_clase_estimulo
   AND cde.empl_unde_fuerza = ce.fuerza
   AND cg_r.rv_low_value = ce.clase_estimulo
   AND cg_r.rv_domain = 'CLASE ESTIMULO'
   AND cn.descripcion = '".$estimulo."'


ORDER BY 
      cg_r.rv_meaning
      ";



    $smtp = $db->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();

  }
  public function countAusencias($identificacion){
    $em = $this->getEntityManager();
    $db = $em->getConnection();

    $query = "
      SELECT sum(ale.numero_dias)num
    FROM empleados e, ausencias_laborales_empl ale

   WHERE e.unde_fuerza = 4

     AND e.activo = 'SI'

     AND e.identificacion = ".$identificacion."
     AND e.consecutivo = ale.empl_consecutivo
     AND e.unde_fuerza = ale.empl_unde_fuerza
     AND e.unde_consecutivo = ale.empl_unde_consecutivo

    ";
    $smtp = $db->prepare($query);
    $smtp->execute();
    return $smtp->fetch();
  }
  public function getHistorialAscensos($id){
    $em = $this->getEntityManager();
    $conn = $em->getConnection();
    $query= "
    SELECT d.descripcion,
       ae.numero_disposicion,
       ae.fecha_disposicion,
       ae.id_fechfisc_ascenso,
       cg_ref.rv_meaning,
			 ae.grad_alfabetico grado,
       ae.ubicacion_escalafon
    FROM escalafones_empleados ee, ascensos_empleados ae, disposiciones d, cg_ref_codes cg_ref

   WHERE ee.fuerza_empleado = 4

     AND ee.id_empleado = ae.empl_consecutivo
     AND ee.fuerza_empleado = ae.empl_unde_fuerza
     AND ee.unde_consecutivo = ae.empl_unde_consecutivo


     AND ae.disp_id_disposicion = d.id_disposicion
     AND cg_ref.rv_domain = 'TIPO ASCENSO'
     AND cg_ref.rv_low_value = ae.tipo_ascenso
     AND ee.identificacion = ".$id."


    ";
    $smtp = $conn->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();


  }
  public function getFelicitaciones($id){

    $em = $this->getEntityManager();
    $conn = $em->getConnection();

    $query="
      SELECT
             d.descripcion dispocision,
             fe.numero_disposicion,
             fe.fecha_disposicion,
             cn.descripcion,
             fe.observaciones,
             mf.descripcion motivo_felicitacion,
             fe.grad_alfabetico,
             c.descripcion cargo,
             i.descripcion indicador,
             i2.descripcion subindicador


        FROM empleados                e,
             felicitaciones_empleados fe,
             clases_novedades         cn,
             motivos_felicitacion     mf,
             disposiciones            d,
             indicadores              i,
             indicadores              i2,
             cargos                   c


       WHERE e.unde_fuerza = 4
         AND e.activo = 'SI'
         AND e.identificacion = ".$id."
         AND e.unde_fuerza = fe.empl_unde_fuerza
         AND e.unde_consecutivo = fe.empl_unde_consecutivo
         AND e.consecutivo = fe.empl_consecutivo

         AND fe.disp_id_disposicion = d.id_disposicion

         AND fe.carg_cargo =  c.cargo
         AND fe.unde_fuerza = c.fuerza

         AND fe.id_clase_novedad = cn.id_clase_novedad

         AND fe.unde_fuerza = mf.indi_fuerza(+)

         AND fe.id_motivo_felicitac = mf.id_motivo_felicitac

         AND mf.indi_id_indicador = i.id_indicador(+)
         AND mf.indi_fuerza = i.fuerza(+)

         AND i.indi_id_indicador = i2.id_indicador(+)
         AND i.indi_fuerza = i2.fuerza(+)";

          $smtp = $conn->prepare($query);
          $smtp->execute();
          return $smtp->fetchAll();
  }

  public function getMerito($id){

   $em = $this->getEntityManager();
      $conn = $em->getConnection();

      $query="
        SELECT cn.descripcion complemento, ce.contenido, ce.id_fecha_complem, ce.grad_alfabetico

          FROM empleados e,
               complementos_empleados ce,
               clases_novedades cn

          WHERE e.unde_fuerza = 4
          AND   e.consecutivo = ce.empl_consecutivo
          AND   e.unde_fuerza = ce.empl_unde_fuerza
          AND   e.unde_consecutivo = ce.empl_unde_consecutivo

          AND ce.id_clase_novedad in (8446)

          AND   ce.id_clase_novedad =  cn.id_clase_novedad
          and  e.identificacion = ".$id."

    ";
      $smtp = $conn->prepare($query);
      $smtp->execute();
      return $smtp->fetchAll();
  }
  public function getConceptoPositivo($id){

     $em = $this->getEntityManager();
        $conn = $em->getConnection();

        $query="
          SELECT cn.descripcion complemento, ce.contenido, ce.id_fecha_complem, ce.grad_alfabetico

            FROM empleados e,
                 complementos_empleados ce,
                 clases_novedades cn

            WHERE e.unde_fuerza = 4
            AND   e.consecutivo = ce.empl_consecutivo
            AND   e.unde_fuerza = ce.empl_unde_fuerza
            AND   e.unde_consecutivo = ce.empl_unde_consecutivo

            AND ce.id_clase_novedad in (1555,8628)

            AND   ce.id_clase_novedad =  cn.id_clase_novedad
            and  e.identificacion = ".$id."

      ";
        $smtp = $conn->prepare($query);
        $smtp->execute();
        return $smtp->fetchAll();
  }
  public function getConceptoNegativo($id){

     $em = $this->getEntityManager();
        $conn = $em->getConnection();

        $query="
          SELECT cn.descripcion complemento, ce.contenido, ce.id_fecha_complem, ce.grad_alfabetico

            FROM empleados e,
                 complementos_empleados ce,
                 clases_novedades cn

            WHERE e.unde_fuerza = 4
            AND   e.consecutivo = ce.empl_consecutivo
            AND   e.unde_fuerza = ce.empl_unde_fuerza
            AND   e.unde_consecutivo = ce.empl_unde_consecutivo

            AND ce.id_clase_novedad in (8627)

            AND   ce.id_clase_novedad =  cn.id_clase_novedad
            and  e.identificacion = ".$id."

      ";
        $smtp = $conn->prepare($query);
        $smtp->execute();
        return $smtp->fetchAll();
  }
  public function getDemerito($id){

     $em = $this->getEntityManager();
        $conn = $em->getConnection();

        $query="
          SELECT cn.descripcion complemento, ce.contenido, ce.id_fecha_complem, ce.grad_alfabetico

            FROM empleados e,
                 complementos_empleados ce,
                 clases_novedades cn

            WHERE e.unde_fuerza = 4
            AND   e.consecutivo = ce.empl_consecutivo
            AND   e.unde_fuerza = ce.empl_unde_fuerza
            AND   e.unde_consecutivo = ce.empl_unde_consecutivo

            AND ce.id_clase_novedad in (8448)

            AND   ce.id_clase_novedad =  cn.id_clase_novedad
            and  e.identificacion = ".$id."

      ";
        $smtp = $conn->prepare($query);
        $smtp->execute();
        return $smtp->fetchAll();
  }
  public function countListas($id){

        $em = $this->getEntityManager();
        $conn = $em->getConnection();

        $query="
                    SELECT
                 esv.lista , count(esv.lista)n_lista

          FROM
               empleados e,
               evaluaciones_empleados eve,
               escalas_evaluacion esv,
               clasificacion_empleados cle,
               unidades_dependencia ud,
               siglas s,
               cargos c

          WHERE
                  e.unde_fuerza       = 4
            AND   e.activo            = 'SI'

            AND   e.identificacion = ".$id."

            AND   e.unde_consecutivo  = eve.empl_unde_consecutivo
            AND   e.consecutivo       = eve.empl_consecutivo
            AND   e.unde_fuerza       = eve.empl_unde_fuerza

            AND   e.consecutivo       = cle.empl_consecutivo
            AND   e.unde_consecutivo  = cle.empl_unde_consecutivo
            AND   e.unde_fuerza       = cle.empl_unde_fuerza

            AND  cle.esev_fuerza      = esv.fuerza
            AND  cle.esev_id_escala   = esv.id_escala

            AND   eve.id_escala       = esv.id_escala
            AND   eve.esev_fuerza     = esv.fuerza

            AND   cle.unde_consecutivo  = ud.consecutivo
            AND   cle.unde_fuerza       = ud.unde_fuerza

            AND   ud.id_sigla           = s.id_sigla

            AND   eve.cargo             = c.cargo
            AND   eve.esev_fuerza       = c.fuerza


            GROUP BY esv.lista
      ";
        $smtp = $conn->prepare($query);
        $smtp->execute();
        return $smtp->fetchAll();
  }

  public function getLicenciasNoRemuneradas($id){
    $em = $this->getEntityManager();
    $conn = $em->getConnection();

    $query="
      SELECT
      TO_CHAR(ale.fecha_disposicion, 'YYYY') año_disposicion,
       cat.descripcion Categoria,
       g.alfabetico GRD,
       e.apellidos,
       e.nombres,
       e.identificacion,
       ud.descripcion_dependencia Dependencia,
       cn.descripcion Tipo_licencia,
       ale.fecha_disposicion Fecha_Disposicion,
       ale.id_fechfisc_aus_laboral Fecha_Fiscal_Inicio,
       ale.fecha_final
      FROM empleados                e,
           grados                   g,
           categorias               cat,
           unidades_dependencia     ud,
           ausencias_laborales_empl ale,
           --nomina_devengados nd
           clases_novedades cn

       WHERE e.unde_fuerza = 4
            AND e.identificacion = ".$id."
         AND e.activo = 'SI'
         AND e.unde_fuerza = g.fuerza

         AND e.grad_alfabetico = g.alfabetico

         AND e.unde_fuerza = cat.fuerza
         AND g.id_categoria = cat.id_categoria
         AND cat.id_categoria IN (10, 11)

         AND e.unde_fuerza = ud.fuerza
         AND e.unde_consecutivo = ud.consecutivo

         AND e.unde_fuerza = ALE.EMPL_UNDE_FUERZA
         AND e.unde_consecutivo = ale.empl_unde_consecutivo
         AND e.consecutivo = ale.empl_consecutivo

         AND ALE.ID_CLASE_NOVEDAD = CN.ID_CLASE_NOVEDAD

         AND cn.id_clase_novedad IN (1483, 1489, 1480)



       ORDER BY año_disposicion,
                cat.id_categoria,
                g.alfabetico,
                e.fecha_ult_ascenso,
                e.apellidos,
                e.nombres
      ";
        $smtp = $conn->prepare($query);
        $smtp->execute();
        return $smtp->fetchAll();
  }
  public function getFormacionAcademica($id){
    $em= $this->getEntityManager();
    $conn = $em->getConnection();
    $query=
    "select
       na.descripcion nivel,
       ca.descripcion,
       eeduc.nombre || empr.nombre_o_razon_social ||
       ud.descripcion_dependencia unidad,
       nae.fecha_inicio,
       nae.fecha_termino,
       nae.nivel_acad_actual
  from empleados                   e,
       niveles_academicos_empleado nae,
       carreras                    ca,
       niveles_academicos          na,
       establecimientos_educa      eeduc,
       empresas                    empr,
       unidades_dependencia        ud

 WHERE e.unde_fuerza = 4
   AND e.identificacion = ".$id."
   AND e.consecutivo = nae.empl_consecutivo
   AND e.unde_fuerza = nae.empl_unde_fuerza
   AND e.unde_consecutivo = nae.empl_unde_consecutivo
   AND nae.carr_id_carrera = ca.id_carrera(+)
   AND nae.empl_unde_fuerza = ca.fuerza(+)
   AND ca.id_nivel_academico = na.id_nivel_academico(+)
   AND nae.id_establecimiento_educa = eeduc.id_establecimiento_educa(+)
   AND nae.empr_identificacion = empr.identificacion(+)
   AND nae.empr_tipo_identificacion = empr.tipo_identificacion(+)
   AND nae.empr_unde_consecutivo = empr.unde_consecutivo(+)
   AND nae.empr_unde_fuerza = empr.unde_fuerza(+)
   AND nae.unde_fuerza = ud.fuerza(+)
   AND nae.unde_consecutivo = ud.consecutivo(+)

 ORDER BY nae.fecha_inicio DESC
";
    $smtp = $conn->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();

  }

  public function countNiveles($id){
    $em= $this->getEntityManager();
    $conn = $em->getConnection();
    $query="select

       na.descripcion, COUNT(*) AS conteo

  from empleados                   e,
       niveles_academicos_empleado nae,
       carreras                    ca,
       niveles_academicos          na
     /*  establecimientos_educa      eeduc,
       empresas                    empr,
       unidades_dependencia        ud*/

 WHERE e.unde_fuerza = 4
   AND e.identificacion = ".$id."
   AND e.consecutivo = nae.empl_consecutivo
   AND e.unde_fuerza = nae.empl_unde_fuerza
   AND e.unde_consecutivo = nae.empl_unde_consecutivo
   AND nae.carr_id_carrera = ca.id_carrera(+)
   AND nae.empl_unde_fuerza = ca.fuerza(+)
   AND ca.id_nivel_academico = na.id_nivel_academico(+)
  /* AND nae.id_establecimiento_educa = eeduc.id_establecimiento_educa(+)
   AND nae.empr_identificacion = empr.identificacion(+)
   AND nae.empr_tipo_identificacion = empr.tipo_identificacion(+)
   AND nae.empr_unde_consecutivo = empr.unde_consecutivo(+)
   AND nae.empr_unde_fuerza = empr.unde_fuerza(+)
   AND nae.unde_fuerza = ud.fuerza(+)
   AND nae.unde_consecutivo = ud.consecutivo(+)*/


      GROUP BY na.descripcion";
    $smtp = $conn->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();
  }

  public function getExperiencia($id){

    $em= $this->getEntityManager();
    $conn = $em->getConnection();
    $query="SELECT vin.rv_meaning,
       empr.nombre_o_razon_social,
       ele.fecha_inicial,
       ele.fecha_retiro
  FROM empleados                   e,
       experiencias_laborales_empl ele,
       empresas                    empr,
       cg_ref_codes                vin

 WHERE e.unde_fuerza = 4
   AND e.identificacion =".$id."
   AND e.consecutivo = ele.empl_consecutivo
   AND e.unde_fuerza = ele.empl_unde_fuerza
   AND e.unde_consecutivo = ele.empl_unde_consecutivo
   AND vin.rv_domain = 'TIPO VINCULACION'
   AND ele.tipo_vinculacion = vin.rv_low_value
   AND ele.empr_identificacion = empr.identificacion
   AND ele.empr_unde_fuerza = empr.unde_fuerza
   AND ele.empr_unde_consecutivo = empr.unde_consecutivo
   AND ele.empr_tipo_identificacion = empr.tipo_identificacion";

    $smtp = $conn->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();

  }
  public function getIdiomas($id){
    $em= $this->getEntityManager();
    $conn = $em->getConnection();
    $query = "SELECT i.descripcion idioma,
       ie.habla,
       ie.lee,
       ie.escribe,
       ie.escucha,
       ie.puntos,
       ie.fecha_examen,
       ee.nombre || ud.descripcion_dependencia || empr.nombre_o_razon_social AS ENTIDAD

  FROM empleados              e,
       idiomas_empleados      ie,
       idiomas                i,
       establecimientos_educa ee,
       empresas               empr,
       unidades_dependencia   ud
 where ie.empl_unde_fuerza = 4
   AND e.identificacion = ".$id."
   AND e.consecutivo = ie.empl_consecutivo
   AND e.unde_consecutivo = ie.empl_unde_consecutivo
   AND e.unde_fuerza = ie.empl_unde_fuerza
   AND ie.id_idioma = i.id_idioma
   AND ie.creado_por <> 'PRUEBA'
   AND ie.id_establecimiento_educa = ee.id_establecimiento_educa(+)
   AND ie.empr_tipo_identificacion = empr.tipo_identificacion(+)
   AND ie.empr_unde_fuerza = empr.unde_fuerza(+)
   AND ie.empr_unde_consecutivo = empr.unde_consecutivo(+)
   AND ie.empr_identificacion = empr.identificacion(+)
   AND ie.unde_fuerza = ud.fuerza(+)
   AND ie.unde_consecutivo = ud.consecutivo(+)";
    $smtp = $conn->prepare($query);
    $smtp->execute();
    return $smtp->fetchAll();
  }

}
